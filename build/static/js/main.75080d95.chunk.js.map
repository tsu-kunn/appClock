{"version":3,"sources":["store/Actions.js","image/amiya.png","image/W_05.png","App.js","store/store.js","index.js"],"names":["Actions","d","type","date","f","flag","m","msg","Clock","props","useState","Date","setDate","hour24","useSelector","state","dispatch","useDispatch","clickEvent","useEffect","timerID","setInterval","clearInterval","localDate","Intl","DateTimeFormat","year","month","day","weekday","format","hours","getHours","minites","getMinutes","seconds","getSeconds","ampm","localTime","className","onClick","DateLabel","dateHistory","lblStr","useMemo","toLocaleTimeString","PictureChange","setTimerID","imgFlg","msgFlg","picPath","pic1","pic2","src","alt","clearTimeout","reactmsg","list","Math","floor","random","length","setTimeout","SettingButton","Fragment","id","defaultChecked","onChange","e","target","checked","htmlFor","Message","setMsg","reactMsg","selectMsg","msgList","message","PM","AM","msgPadd","rmsgPadd","style","backgroundColor","AppClock","apptimeStyle","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75080d95.chunk.js","sourcesContent":["export const Actions = {\r\n    setDateHistory(d) {\r\n        return {\r\n            type: \"SET_DATE_HISTORY\",\r\n            date: d,\r\n        };\r\n    },\r\n    setHour24(f) {\r\n        return {\r\n            type: \"SET_HOUR24\",\r\n            flag: f,\r\n        };\r\n    },\r\n    setMsgFlg(f) {\r\n        return {\r\n            type: \"SET_MSGFLG\",\r\n            flag: f,\r\n        };\r\n    },\r\n    changeImage() {\r\n        return { type: \"CHANGE_IMAGE\" };\r\n    },\r\n    setReactMsg(m) {\r\n        return {\r\n            type: \"SET_REACTMSG\",\r\n            msg: m,\r\n        };\r\n    },\r\n    setApptimeStyle(s) {\r\n        return {\r\n            type: \"SET_APPTIME_STYLE\",\r\n            style: s,\r\n        };\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/amiya.571286db.png\";","export default __webpack_public_path__ + \"static/media/W_05.c7b053ce.png\";","import React, { useEffect, useState, useMemo } from 'react';\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Actions } from \"./store/Actions\";\n\nimport pic1 from \"./image/amiya.png\";\nimport pic2 from \"./image/W_05.png\";\n\nimport message from \"./message.json\";\nimport reactmsg from \"./reactmsg.json\";\n\n\nfunction Clock(props) {\n    const [date, setDate] = useState(new Date());\n    const hour24 = useSelector((state) => state.hour24);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const timerID = setInterval(() => { setDate(new Date()); }, 1000);\n\n        return () => {\n            clearInterval(timerID);\n        };\n    }, []);\n\n    function clickEvent() {\n        dispatch(Actions.setDateHistory(date));\n        dispatch(Actions.changeImage());\n    }\n\n    // 時刻表示\n    // 日にち+曜日\n    let opts = { year: 'numeric', month: 'long', day: 'numeric', weekday: 'long' };\n    let localDate = new Intl.DateTimeFormat(\"ja-JP\", opts).format(date);\n\n    // 時間\n    let hours = date.getHours();\n    let minites = date.getMinutes();\n    let seconds = date.getSeconds();\n    let ampm = null;\n\n    if (!hour24) {\n        ampm = hours >= 12 ? \"PM\" : \"AM\";\n        hours = hours % 12;\n    }\n    minites = minites < 10 ? \"0\" + minites : minites;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n    // let localTime = ampm + hours + \":\" + minites + \":\" + seconds;\n    let localTime = hours + \":\" + minites;\n\n    return (\n        <div>\n            <p className=\"date\" onClick={clickEvent}>\n                {localDate}\n            </p>\n            <div className=\"clock\" onClick={clickEvent}>\n                <div className=\"ampm\">\n                    {ampm}\n                </div>\n                <div className=\"time\">\n                    {localTime}\n                </div>\n                <div className=\"seconds\">\n                    {seconds}\n                </div>\n            </div>\n            {/* <p className=\"clock\" onClick={() => props.onClick(date)}>\n                {date.toLocaleTimeString(\"ja-JP\", { hour12: false })}\n            </p> */}\n        </div>\n    );\n}\n\nfunction DateLabel(props) {\n    const date = useSelector((state) => state.dateHistory);\n\n    // props.date が更新された場合のみ実行するように変更\n    const lblStr = useMemo(() => {\n        if (date != null) {\n            let opts = { year: 'numeric', month: 'long', day: 'numeric', weekday: 'long' };\n            let localDate = new Intl.DateTimeFormat(\"ja-JP\", opts).format(date);\n            let localTime = date.toLocaleTimeString(\"ja-JP\");\n\n            return (localDate + \" \" + localTime);\n        } else {\n            return (\"----年--月--日―曜日 --:--:--\");\n        }\n    }, [date]);\n\n    return (\n        <label>{lblStr}</label>\n    );\n}\n\n// srcに配置した場合は import を使うのが一般的らしい\nfunction PictureChange(props) {\n    const [timerID, setTimerID] = useState(null);\n    const imgFlg = useSelector((state) => state.imgFlg);\n    const msgFlg = useSelector((state) => state.msgFlg);\n    const dispatch = useDispatch();\n\n    function dialogue() {\n        if (timerID != null) {\n            clearTimeout(timerID);\n        }\n\n        if (msgFlg) {\n            dispatch(Actions.setReactMsg(reactmsg.list[Math.floor(Math.random() * reactmsg.list.length)]));\n            setTimerID(setTimeout(() => { dispatch(Actions.setReactMsg(null)) }, 3000));\n        } else {\n            dispatch(Actions.setReactMsg(null));\n            setTimerID(null);\n        }\n    }\n\n    // const pic1 = \"/pict/amiya.png\";\n    // const pic2 = \"/pict/W_05.png\";\n    let picPath = imgFlg ? pic1 : pic2;\n\n    return (\n        <img src={picPath} alt=\"絵\" className=\"chara-img\" onClick={dialogue} />\n    );\n\n    // public に配置した場合は `${process.env.PUBLIC_URL}` を使う\n    // return (\n    //     <img src={`${process.env.PUBLIC_URL}` + picPath} alt=\"絵\" width=\"320\" height=\"320\" />\n    // );\n}\n\n// トグルボタン\nfunction SettingButton(props) {\n    const dispatch = useDispatch();\n\n    function changeMessage(e) {\n        dispatch(Actions.setMsgFlg(e.target.checked));\n    }\n\n    function changeHoure(e) {\n        dispatch(Actions.setHour24(e.target.checked));\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"item-frame\">\n                <input type='checkbox' id='setting_item_1' className=\"checkbox\" defaultChecked onChange={changeMessage} />\n                <label className=\"switch\" htmlFor='setting_item_1'></label>\n                <label className=\"text\" htmlFor='setting_item_1'>つぶやき表示</label>\n            </div>\n            <div className=\"item-frame\" >\n                <input type='checkbox' id='setting_item_2' className=\"checkbox\" defaultChecked onChange={changeHoure} />\n                <label className=\"switch\" htmlFor='setting_item_2'></label>\n                <label className=\"text\" htmlFor='setting_item_2'>24時間表示</label>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nfunction Message(props) {\n    const [msg, setMsg] = useState(null);\n    const msgFlg = useSelector((state) => state.msgFlg);\n    const reactMsg = useSelector((state) => state.reactMsg);\n\n    function selectMsg() {\n        if (msg === null && msgFlg) {\n            const date = new Date();\n            const msgList = date.getHours() >= 12 ? message.PM : message.AM;\n            setMsg(msgList[Math.floor(Math.random() * msgList.length)]);\n        } else {\n            setMsg(null);\n        }\n    }\n\n    useEffect(() => {\n        const timerID = setInterval(selectMsg, 3000);\n\n        return () => {\n            clearInterval(timerID);\n        };\n    });\n\n    let msgPadd = msg === null ? 'rgba(222, 219, 202, 0.0)' : 'rgba(222, 219, 202, 0.85)';\n    let rmsgPadd = reactMsg === null ? 'rgba(222, 219, 202, 0.0)' : 'rgba(222, 219, 202, 0.85)';\n\n    return (\n        <React.Fragment>\n            <div className=\"message\" style={{ backgroundColor: msgPadd }}>\n                <label>{msg}</label>\n            </div>\n            <div className=\"react-message\" style={{ backgroundColor: rmsgPadd }}>\n                <label>{reactMsg}</label>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nfunction AppClock() {\n    const apptimeStyle = useSelector((state) => state.apptimeStyle);\n\n    // function changeApptimeStyle(bgColor) {\n    //     let chgStyle = {\n    //         backgroundColor: bgColor\n    //     }\n    //     dispatch(Actions.setApptimeStyle(chgStyle));\n    // }\n\n    return (\n        <div className=\"app-main\">\n            <div className=\"app-time\" style={apptimeStyle}>\n                <PictureChange />\n                <div className=\"app-clock\">\n                    <Clock />\n                    <DateLabel />\n                </div>\n                <div className=\"app-message\">\n                    <Message />\n                </div>\n                <div className=\"app-button\">\n                    <SettingButton />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AppClock;\n","import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n    dateHistory: null,\r\n    hour24: true,\r\n    msgFlg: true,\r\n    imgFlg: 1,\r\n    reactMsg: null,\r\n    apptimeStyle: { backgroundColor: \"#8490c8\" },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_DATE_HISTORY\":\r\n            return {\r\n                ...state,\r\n                dateHistory: action.date,\r\n            };\r\n        case \"SET_HOUR24\":\r\n            return {\r\n                ...state,\r\n                hour24: action.flag,\r\n            };\r\n        case \"SET_MSGFLG\":\r\n            return {\r\n                ...state,\r\n                msgFlg: action.flag,\r\n            };\r\n        case \"CHANGE_IMAGE\":\r\n            return {\r\n                ...state,\r\n                imgFlg: state.imgFlg ^ 1,\r\n            };\r\n        case \"SET_REACTMSG\":\r\n            return {\r\n                ...state,\r\n                reactMsg: action.msg,\r\n            };\r\n        case \"SET_APPTIME_STYLE\":\r\n            return {\r\n                ...state,\r\n                apptimeStyle: action.style,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>,\n    </Provider>,\n    document.getElementById('root')\n);\n\n// PWAに設定\n// serviceWorkerRegistration.register();\n"],"sourceRoot":""}